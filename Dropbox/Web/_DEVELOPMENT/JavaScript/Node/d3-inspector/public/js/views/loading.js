// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(function(require) {
    var LoadingView, Marionette, template, _ref;
    Marionette = require('marionette');
    template = require('hbs!templates/loading');
    return LoadingView = (function(_super) {
      __extends(LoadingView, _super);

      function LoadingView() {
        this.initialize = __bind(this.initialize, this);
        _ref = LoadingView.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      LoadingView.prototype.template = template;

      LoadingView.prototype.initialize = function(options) {};

      return LoadingView;

    })(Marionette.ItemView);
  });

}).call(this);
