// Generated by CoffeeScript 1.6.3
(function() {
  var Hero, models, mongoose;

  mongoose = require('mongoose');

  models = require('../models/hero');

  Hero = mongoose.model('Hero');

  module.exports = {
    index: function(req, res) {
      return Hero.find().exec(function(err, heroes) {
        if (err) {
          return res.render('error', {
            status: 500
          });
        } else if (!heroes.length) {
          return res.send('No records found');
        } else {
          return res.jsonp(heroes);
        }
      });
    },
    get: function(req, res) {
      return Hero.find({
        _id: req.params.id
      }).exec(function(err, hero) {
        if (err) {
          return res.render('error', {
            status: 500
          });
        } else if (!hero.length) {
          return res.send('No record found');
        } else {
          return res.jsonp(hero);
        }
      });
    },
    add: function(req, res) {
      return Hero.find({
        heroId: req.body.heroId
      }, function(err, results) {
        var hero;
        if (results.length === 0) {
          hero = new Hero(req.body);
          return hero.save(function(err) {
            if (err) {
              return res.jsonp('Error: ' + err);
            } else {
              return res.jsonp(hero);
            }
          });
        } else {
          return res.jsonp(results[0]);
        }
      });
    },
    update: function(req, res) {
      return Hero.findByIdAndUpdate(req.params.id, req.body, function(err, hero) {
        if (err) {
          return res.send('Error: ' + err);
        } else {
          return res.jsonp(hero);
        }
      });
    },
    "delete": function(req, res) {
      return Hero.findByIdAndRemove(req.params.id, function(err, hero) {
        if (err) {
          return res.send('Error: ' + err);
        } else {
          return res.jsonp(hero);
        }
      });
    }
  };

}).call(this);
